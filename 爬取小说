import asyncio
from asyncio import tasks
import aiohttp #pip install aiohttp
from parser import Selector

async def fetch(session,url):
    async with session.get(url) as response:
        text=await response.text()
        return text

async def parser_content(html):
    sel=Selector(html)
    title=sel.css('h1::text').get()
    print(title)
    content=sel.css('#content ::text').getall()
    text="\n".join(content)
    with open(title+'.txt',mode='w',encoding='utf-8') as f:
        f.write(title)
        f.write('\n')
        f.write(text)

async def download_content(url):
    async with aiohttp.ClientSession() as session:
        html=await fetch(session,url)
        await parser_content(html)

tasks=[
    asyncio.ensure_future(download_content(url1))
    asyncio.ensure_future(download_content(url2))
    asyncio.ensure_future(download_content(url3))
    asyncio.ensure_future(download_content(url4))
    asyncio.ensure_future(download_content(url5))
]

loop=asyncio.get_event_loop()
loop.run_until_complete(asyncio.gather(*tasks))
